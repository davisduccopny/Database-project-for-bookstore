USE CUAHANGSACH_ONLINE
---PHẦN CHECK 
--Trong bảng sản phẩm, giá sản phẩm và tồn kho >=0
ALTER TABLE SANPHAM
ADD CONSTRAINT CHK_SP_0 CHECK ( TONKHO >=0);
-- Trong bảng đơn hàng, ngày đặt <= ngày hiện tại 
ALTER TABLE DONHANG
ADD CONSTRAINT CHK_DH_NGAYDAT CHECK (NGAYDAT<= GETDATE());
--Trong bảng khách hàng, giới tính chỉ có thể là [nam, nữ, khác]
ALTER TABLE KHACHHANG 
ADD CONSTRAINT CHK_KH_GT CHECK (GIOITINH IN (N'Nam', N'Nữ'));
-- Trong bảng khách hàng, số điện thoại có 9-10 chữ số, mỗi chữ số nằm trong khoảng 0-9 
 ALTER TABLE KHACHHANG
 ADD CONSTRAINT CHK_KH_SDT CHECK  (SODIENTHOAI LIKE '[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]' OR SODIENTHOAI LIKE '[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]');

 -- Trong bảng giảm giá danh mục, loại giá trị giảm giá [GIATRI,PHANTRAM] giatri <= 100 nếu loaigiatri = PHANTRAM 
 ALTER TABLE GIAMGIA_DANHMUC
 ADD CONSTRAINT CHK_GIAMGIA_DANHMUC_LOAIGIATRI CHECK ((lOAIGIATRI = 'GIATRI') OR (LOAIGIATRI='PHANTRAM' AND GIATRI<=100));
 --Trong bảng giảm giá đơn hàng, loại giá trị giảm giá [GIATRI,PHANTRAM] và giatri <= 100 nếu loaigiatri = PHANTRAM 
 ALTER TABLE GIAMGIA_DONHANG
 ADD CONSTRAINT CHK_GIAMGIA_DONHANG_LOAIGIATRI CHECK ((lOAIGIATRI = 'GIATRI') OR (LOAIGIATRI='PHANTRAM' AND GIATRI<=100)); 
 -- Trong bảng đơn hàng, ngày đặt hàng phải bé hơn ngày giao 
ALTER TABLE DONHANG
ADD CONSTRAINT CHK_DONHANG_NDNG CHECK (NGAYDAT <= NGAYGIAO);
-- Trong bảng đánh giá, số điểm nằm trong khoảng từ 1-5
ALTER TABLE DANHGIA
ADD CONSTRAINT CHK_DANHGIA_SODIEM CHECK (SODIEM IN (1,2,3,4,5));
-- Trong bảng đơn hàng, trạng thái nằm trong các giá trị ( 'chờ xử lý', 'đã xử lý' , 'đang giao' , 'đã giao', 'đã hủy', 'xử lý hoàn', 'đang hoàn', 'đã hoàn'))
ALTER TABLE DONHANG
ADD CONSTRAINT CHK_DONHANG_TRANGTHAI CHECK (TRANGTHAI IN( N'chờ xử lý', N'đã xử lý' , N'đang giao' , N'đã giao', N'đã hủy', N'xử lý hoàn', N'đang hoàn', N'đã hoàn'));

-- Trong bảng chi tiêts thanh toán, trạng thái nằm trong các giá trị ('xử lý', 'thành công')
ALTER TABLE CHITIET_THANHTOAN
ADD CONSTRAINT CHK_TIETTIET_THANHTOAN_TRANGTHAI CHECK(TRANGTHAI_TT IN (N'xử lý', N'thành công'));
--Trong bảng nhà cung cấp, SĐT có 10 hoặc 11 số, nằm trong khoảng từ 0-9
ALTER TABLE NHACUNGCAP
ADD CONSTRAINT CHK_NHACUNGCAP_SDT CHECK (SDT LIKE '[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]' OR SDT LIKE '[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]');

-- Trong bảng địa chỉ nhận, sodienthoai có 10 hoặc 11 số nằm trong khoảng từ 0-9
 ALTER TABLE DIACHINHAN
 ADD CONSTRAINT CHK_DIACHINHAN_SDT CHECK (SODIENTHOAI LIKE '[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]' OR SODIENTHOAI LIKE '[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]');
-- Trong bảng giảm giá đơn hàng, TGbatdau<=TGketthuc
ALTER TABLE GIAMGIA_DONHANG
ADD CONSTRAINT CHK_GIAMGIA_DONHANG_TGBATDAU CHECK (TGBATDAU <= TGKETTHUC);
-- Trong bảng giảm giá danh mục, TGbatdau <= TGketthuc 
ALTER TABLE GIAMGIA_DANHMUC
ADD CONSTRAINT CHK_GIAMGIA_DANHMUC_TGBATDAU CHECK (TGBATDAU <= TGKETTHUC);
--Trong bảng giảm giá đơn hàng, Trạng thái nằm trong 2 giá trị là 0 hoặc 1 
ALTER TABLE GIAMGIA_DONHANG
ADD CONSTRAINT CHK_GIAMGIA_DONHANG_TRANGTHAI CHECK (TRANGTHAI IN (0,1));
--Trong bảng giảm giá danh mucj, Trạng thái nằm trong 2 giá trị là 0 hoặc 1 
ALTER TABLE GIAMGIA_DANHMUC
ADD CONSTRAINT CHK_GIAMGIA_DANHMUC_TRANGTHAI CHECK (TRANGTHAI IN (0,1));
-- Trong bảng đơn hàng, PhiVanchuyen >=0 
 ALTER TABLE DONHANG
 ADD CONSTRAINT CHK_DONHANG_PHIVANCHUYENDUONG CHECK(PHIVANCHUYEN >=0);
-- Trong bảng chitiet donhang, soluong >=1
ALTER TABLE CHITIET_DONHANG 
ADD CONSTRAINT CHK_CHITIETDONHANG_SL CHECK (SOLUONG >=1);
-- Trong bảng giamgia_donhang, giatri >0, gia tri toi thieu>=0, giamtoida >0 
ALTER TABLE GIAMGIA_DONHANG 
ADD CONSTRAINT CHK_GIAMGIA_DONHANG_GIATRI_GIATRITOITHIEU CHECK (GIATRI>0 AND GIATRI_TOITHIEU>=0 AND GIAMTOIDA >0);
-- Trong bảng giamgia_danhmuc, giatri>0, giatritoithieu >=0, giamtoida >0 
ALTER TABLE GIAMGIA_DANHMUC 
ADD CONSTRAINT CHK_GIAMGIA_DANHMUC_GIATRI_GIATRITOITHIEU CHECK (GIATRI>0 AND GIATRI_TOITHIEU>=0 AND GIAMTOIDA >0);
ALTER TABLE DIACHINHAN 
ADD CONSTRAINT CHK_TINHTHANH_KHACHHANG CHECK (THANHPHO IN (N'An Giang',N'Bà Rịa – Vũng Tàu',N'Bắc Giang',N'Bắc Kạn',N'Bạc Liêu',N'Bắc Ninh',N'Bến Tre',N'Bình Định',N'Bình Dương',N'Bình Phước',N'Bình Thuận',N'Cà Mau',N'Cần Thơ',N'Cao Bằng',N'Đà Nẵng',N'Đắk Lắk',N'Đắk Nông',N'Điện Biên',N'Đồng Nai'
,N'Đồng Tháp',N'Gia Lai',N'Hà Giang',N'Hà Nam',N'Hà Nội',N'Hà Tĩnh',N'Hải Dương',N'Hải Phòng',N'Hậu Giang',N'Hòa Bình',N'Hưng Yên',N'Khánh Hòa',N'Kiên Giang',N'Kon Tum',N'Lai Châu',N'Lâm Đồng',N'Lạng Sơn'
,N'Lào Cai',N'Long An',N'Nam Định',N'Nghệ An',N'Ninh Bình',N'Ninh Thuận',N'Phú Thọ',N'Phú Yên',N'Quảng Bình',N'Quảng Nam',N'Quảng Ngãi',N'Quảng Ninh',N'Quảng Trị',N'Sóc Trăng',N'Sơn La',N'Tây Ninh',N'Thái Bình',N'Thái Nguyên',N'Thanh Hóa',N'Thừa Thiên Huế',N'Tiền Giang',N'Hồ Chí Minh',N'Trà Vinh',N'Tuyên Quang',N'Vĩnh Long',N'Vĩnh Phúc',N'Yên Bái'));

--TRIGGER UPDATE-TRIGGER DELETE
-- Tạo các trigger xóa các bản ghi liên quan 
CREATE TRIGGER TR_DELETE_SANPHAM_NCC
ON NHACUNGCAP
INSTEAD OF DELETE 
AS 
BEGIN
	SET NOCOUNT ON;
	DELETE SANPHAM
	FROM deleted 
	WHERE SANPHAM.Ma_NCC = deleted.Ma_NCC
	DELETE NHACUNGCAP
	FROM deleted
	WHERE NHACUNGCAP.Ma_NCC = deleted.Ma_NCC
	END	;
--
CREATE TRIGGER TR_DELETE_SANPHAM_DGIA
ON SANPHAM
INSTEAD OF  DELETE 
AS 
BEGIN
	SET NOCOUNT ON;
	DELETE DANHGIA
	FROM deleted
	WHERE DANHGIA.MaSP = deleted.MaSP
	DELETE CHITIET_DONHANG
	FROM deleted
	WHERE CHITIET_DONHANG.MaSP = deleted.MaSP
	DELETE GIOHANG
	FROM deleted
	WHERE deleted.MaSP = GIOHANG.MaSanPham
	DELETE SANPHAM
	FROM deleted 
	WHERE deleted.MaSP = SANPHAM.MaSP
END;

-- -
CREATE TRIGGER TR_DELETE_DANHMUC_SP_GG
ON DANHMUC
INSTEAD OF DELETE
AS
BEGIN
	SET NOCOUNT ON;
	DELETE SANPHAM
	FROM deleted
	WHERE SANPHAM.MaDanhMuc = deleted.MaDanhMuc
	DELETE DANHMUC_GIAM
	FROM deleted
	WHERE deleted.MaDanhMuc = DANHMUC_GIAM.MaDanhMuc
	DELETE DANHMUC
	FROM deleted
	WHERE deleted.MaDanhMuc = DANHMUC.MaDanhMuc

END;
-- 
CREATE TRIGGER TR_DELETE_GIAMGIA_DANHMUC_CTDH_DMG
ON GIAMGIA_DANHMUC
INSTEAD OF DELETE
AS
BEGIN
	SET NOCOUNT ON;
	DELETE DANHMUC_GIAM
	FROM deleted
	WHERE deleted.MaGiamGia_DM = DANHMUC_GIAM.MaGiamGia_DM
	DELETE CHITIET_DONHANG
	FROM deleted 
	WHERE deleted.MaGiamGia_DM = CHITIET_DONHANG.MaGiamGia_DM
	DELETE GIAMGIA_DANHMUC
	FROM deleted 
	WHERE deleted.MaGiamGia_DM = GIAMGIA_DANHMUC.MaGiamGia_DM
END;
-- 
CREATE  TRIGGER TR_DELETE_THANHTOAN_CTTT
ON THANHTOAN
INSTEAD OF DELETE
AS
BEGIN
	SET NOCOUNT ON;
	DELETE CHITIET_THANHTOAN
	FROM deleted
	WHERE deleted.MaThanhToan = CHITIET_THANHTOAN.MaThanhToan
	DELETE THANHTOAN
	FROM deleted
	WHERE deleted.MaThanhToan = THANHTOAN.MaThanhToan
END;
--
CREATE TRIGGER TRIG_DELETE_DONHANG
ON DONHANG
INSTEAD OF DELETE
AS
BEGIN
	SET NOCOUNT ON;
	DELETE CHITIET_DONHANG 
	FROM deleted
	WHERE CHITIET_DONHANG.MaDH = deleted.MaDH
	DELETE CHITIET_THANHTOAN
	FROM deleted
	WHERE deleted.MaDH = CHITIET_THANHTOAN.MaDH
	DELETE DANHGIA
	FROM deleted
	WHERE DANHGIA.MaDH = deleted.MaDH
	DELETE DONHANG 
	FROM deleted
	WHERE DONHANG.MaDH = deleted.MaDH
	
END;
-- 
CREATE  TRIGGER TR_DELETE_GIAMGIA_DONHANG_DH
ON GIAMGIA_DONHANG
INSTEAD OF DELETE
AS
BEGIN
	SET NOCOUNT ON;
	DELETE DONHANG
	FROM deleted
	WHERE DONHANG.MaGiamGia_DH = deleted.MaGiamGia_DH 
	DELETE GIAMGIA_DONHANG
	FROM deleted
	WHERE GIAMGIA_DONHANG.MaGiamGia_DH = deleted.MaGiamGia_DH

END;
--
CREATE  TRIGGER TR_DELETE_DIACHINHAN_DH
ON DIACHINHAN
INSTEAD OF DELETE
AS
BEGIN
	SET NOCOUNT ON;
	DELETE DONHANG
	FROM deleted
	WHERE DONHANG.MaDiaChi = deleted.MaDiaChi
	DELETE DIACHINHAN
	FROM deleted
	WHERE DIACHINHAN.MaDiaChi = deleted.MaDiaChi
END;
--
CREATE TRIGGER TRIG_DELETE_KHACHHANG
ON KHACHHANG
INSTEAD OF DELETE
AS
BEGIN
	SET NOCOUNT ON;
	DELETE DONHANG
	FROM deleted
	WHERE DONHANG.MaKH = deleted.MAKH
	DELETE GIOHANG
	FROM deleted
	WHERE GIOHANG.MaKH = deleted.MAKH
	DELETE DIACHINHAN
	FROM deleted
	WHERE deleted.MaKH = DIACHINHAN.MaKH
	DELETE KHACHHANG
	FROM deleted
	WHERE KHACHHANG.MaKH = deleted.MAKH
	
END;

--Tạo trigger, cập nhật thời gian của update trong bảng giamgia_danhmuc
CREATE TRIGGER TRIG_GIAMGIA_DANHMUC_TGCAPNHAT
ON GIAMGIA_DANHMUC 
AFTER UPDATE, INSERT
AS BEGIN
	SET NOCOUNT ON;
	UPDATE GIAMGIA_DANHMUC
	SET TGCapNhat = GETDATE()
	WHERE GIAMGIA_DANHMUC.MaGiamGia_DM IN (SELECT MaGiamGia_DM FROM inserted)
	
END;


--Tạo trigger, cập nhật thời gian của update trong bảng giamgia_donhang
CREATE TRIGGER TRIG_GIAMGIA_DONHANG_TGCAPNHAT
ON GIAMGIA_DONHANG
AFTER UPDATE, INSERT
AS BEGIN
	SET NOCOUNT ON;
	UPDATE GIAMGIA_DONHANG
	SET TGCapNhat = GETDATE()
	WHERE GIAMGIA_DONHANG.MaGiamGia_DH IN (SELECT MaGiamGia_DH FROM inserted)
	
END;

--Tạo trigger, cập nhật thời gian của update trong bảng sản phẩm 
CREATE TRIGGER TRIG_GIAMGIA_SANPHAM_TGCAPNHAT
ON SANPHAM
AFTER UPDATE,INSERT
AS BEGIN
	SET NOCOUNT ON;
	UPDATE SANPHAM
	SET TGCapNhat = GETDATE()
	WHERE SANPHAM.MaSP IN (SELECT MaSP FROM inserted)
	
END;

--Tạo trigger, cập nhật thời gian của update trong bảng giỏ hàng
CREATE TRIGGER TRIG_GIAMGIA_GIOHANG_TGCAPNHAT
ON GIOHANG
AFTER UPDATE , INSERT
AS BEGIN
	SET NOCOUNT ON;
	UPDATE GIOHANG
	SET TGCapNhat = GETDATE()
	WHERE GIOHANG.MaKH IN (SELECT MaKH FROM inserted) AND GIOHANG.MaSanPham IN (SELECT MaSanPham FROM inserted)
	
END;
DROP TRIGGER TRIG_GIAMGIA_GIOHANG_TGCAPNHAT
--Tạo trigger, cập nhật thời gian của update trong bảng chitiet_thanhtoan
CREATE TRIGGER TRIG_GIAMGIA_CHITIET_THANHTOAN_TGCAPNHAT
ON CHITIET_THANHTOAN
AFTER UPDATE, INSERT
AS BEGIN
	SET NOCOUNT ON;
	UPDATE CHITIET_THANHTOAN
	SET TGCapNhat = GETDATE()
	WHERE CHITIET_THANHTOAN.MaDH IN (SELECT MaDH FROM inserted) AND CHITIET_THANHTOAN.MaThanhToan IN (SELECT MaThanhToan FROM inserted)
	
END;
--Tạo trigger, cập nhật thời gian của update tron bảng đánh giá 
CREATE TRIGGER TRIG_GIAMGIA_DANHGIA_TGCAPNHAT
ON DANHGIA
AFTER UPDATE , INSERT
AS BEGIN
	SET NOCOUNT ON;
	UPDATE DANHGIA
	SET TGCapNhat = GETDATE()
	WHERE DANHGIA.MaDH IN (SELECT MaDH FROM inserted) AND DANHGIA.MaSP IN (SELECT MaSP FROM inserted)
	
END;



------------------------------------------------------------------------------------------------
--Tạo trigger, kiểm tra tônf kho đối với bảng chi tiết đơn hàng
CREATE TRIGGER TRIG_CHITIET_DONHANG_SLTONKHO
ON CHITIET_DONHANG
AFTER  INSERT, UPDATE
AS
BEGIN 
		SET NOCOUNT ON;
    DECLARE @CHITIET TABLE 
  ( MASP VARCHAR(10), SOLUONG DECIMAL(16,2) )
  INSERT INTO @CHITIET
  SELECT  inserted.MaSP,SUM(inserted.SoLuong) FROM inserted group by MaSP
  IF EXISTS (
	SELECT 1 FROM @CHITIET C INNER JOIN SANPHAM ON SANPHAM.MaSP = C.MASP 
	WHERE  C.SOLUONG > SANPHAM.TonKho
  )
  BEGIN
   DECLARE @MASP VARCHAR(10) = (SELECT TOP 1 C.MASP FROM @CHITIET C INNER JOIN SANPHAM ON SANPHAM.MaSP = C.MASP 
	WHERE C.SOLUONG > SANPHAM.TonKho )
	DECLARE @MALOI NVARCHAR(100)= CONCAT(N'SỐ LƯỢNG CHỌN VƯỢT QUÁ TỒN KHO! MASP : ', @MASP)
	RAISERROR (@MALOI, 16,1)
	ROLLBACK TRANSACTION 
  END
  
  
 END; 
 -- Tạo trigger, kiểm tra tồn kho  cho bảng GIOHANG 
CREATE TRIGGER TRIG_GIOHANG_CHECKSLTONGKHO
ON GIOHANG
AFTER INSERT, UPDATE
AS
BEGIN
	SET NOCOUNT ON;
    DECLARE @GIOHANG TABLE 
	(MAKH VARCHAR(10), MASP VARCHAR(10), TENSP NVARCHAR(1000), SOLUONG INT)
	INSERT INTO @GIOHANG 
	SELECT inserted.MaKH, inserted.MaSanPham,inserted.TenSP,inserted.SoLuong FROM inserted
	DECLARE @TONGHANG TABLE (MASP VARCHAR(10),TONGHANG INT)
	INSERT INTO @TONGHANG
	SELECT inserted.MaSanPham,SUM(inserted.SoLuong) FROM inserted GROUP BY inserted.MaSanPham
	IF EXISTS 
	( SELECT 1 FROM @GIOHANG G INNER JOIN SANPHAM ON SANPHAM.MaSP = G.MASP
								INNER JOIN @TONGHANG T ON  T.MASP = G.MASP
	WHERE T.TONGHANG > SANPHAM.TonKho)
	BEGIN
	RAISERROR('KHÔNG THẺ CHỌN SẢN PHẨM - ĐÃ HẾT HÀNG!',16,1)
	ROLLBACK TRANSACTION
	INSERT INTO GIOHANG(MaKH,MaSanPham,SoLuong,TenSP)
	SELECT G.MAKH,G.MASP,G.SOLUONG,G.TENSP
	FROM @GIOHANG G
	WHERE  G.MASP IN (SELECT G.MASP FROM @GIOHANG G INNER JOIN SANPHAM ON SANPHAM.MaSP = G.MASP
								INNER JOIN @TONGHANG T ON  T.MASP = G.MASP WHERE T.TONGHANG < SANPHAM.TonKho)
	END

END;
--Tạo trigger, khi thay đổi dữ liệu cho bảng đánh giá, phải quy chiếu đến bảng đơn hàng, nếu trạng thái là đã giao thì mới được phép thay đổi dữ liệu
CREATE TRIGGER TRIG_DANHGIA_KIEMTRADONHANG_DAGIAO
ON DANHGIA
AFTER INSERT, UPDATE
AS 
BEGIN
		SET NOCOUNT ON;
	 DECLARE @DANHGIA TABLE (	
        MADH VARCHAR(10),
		MASP VARCHAR(10),
		NGAYDANHGIA DATETIME 
    )
	INSERT INTO @DANHGIA
	SELECT inserted.MaDH, inserted.MaSP, inserted.NgayDanhGia FROM inserted
	IF EXISTS 
	(
		SELECT 1 FROM @DANHGIA D INNER JOIN DONHANG ON DONHANG.MaDH = D.MADH
		WHERE DONHANG.TrangThai != N'đã giao'
	)
	BEGIN
	DECLARE @MADH VARCHAR(10) = (SELECT TOP 1  D.MADH FROM  @DANHGIA D INNER JOIN DONHANG ON DONHANG.MaDH = D.MADH
		WHERE DONHANG.TrangThai != N'đã giao')
		DECLARE @MALOI NVARCHAR(100) = CONCAT(N'KHÔNG THỂ ĐÁNH GIÁ ĐƠN HÀNG - TRẠNG THÁI CHƯA CẬP NHẬT ! MADH: ', @MADH)
	RAISERROR(@MALOI,16,1)
	ROLLBACK TRANSACTION
	END
	IF EXISTS 
	(
	SELECT 1 FROM @DANHGIA D INNER JOIN DONHANG ON DONHANG.MaDH = D.MADH
		WHERE D.NGAYDANHGIA< DONHANG.NgayGiao 
	)
	BEGIN
	DECLARE @MADH2 VARCHAR(10) = (SELECT TOP 1 D.MADH FROM @DANHGIA D INNER JOIN DONHANG ON DONHANG.MaDH = D.MADH
		WHERE D.NGAYDANHGIA< DONHANG.NgayGiao 
						)
		DECLARE @MALOI2 NVARCHAR(100) = CONCAT(N'KHÔNG THỂ ĐÁNH GIÁ! ĐƠN HÀNG CHƯA ĐƯỢC GIAO! MADH: ',@MADH2)
		RAISERROR(@MALOI2,16,1)
		ROLLBACK TRANSACTION
	END
END;
 -- Trong bảng CHI TIET THANH TOÁN  và bảng đơn hàng,ngày đặt <= ngày thanh toán <= ngày giao
CREATE TRIGGER TR_THANHTOAN_NGAYTHANHTOAN 
ON CHITIET_THANHTOAN
AFTER INSERT, UPDATE 
AS
BEGIN
		SET NOCOUNT ON;
  DECLARE @THANHTOAN TABLE (	
        MADH VARCHAR(10),
		MATHANHTOAN VARCHAR(10),
		NGAYTHANHTOAN DATETIME	
    )
    INSERT INTO @THANHTOAN
    SELECT inserted.MaDH,inserted.MaThanhToan,inserted.NgayThanhToan
    FROM inserted
	IF EXISTS(
	SELECT 1 FROM @THANHTOAN T INNER JOIN DONHANG ON T.MADH = DONHANG.MaDH 
				WHERE DONHANG.NgayDat > T.NGAYTHANHTOAN OR T.NGAYTHANHTOAN > DONHANG.NgayGiao 
	)
	BEGIN
	DECLARE @MADH VARCHAR(10) = (SELECT TOP 1 T.MADH FROM @THANHTOAN T INNER JOIN DONHANG ON T.MADH = DONHANG.MaDH 
				WHERE DONHANG.NgayDat > T.NGAYTHANHTOAN OR T.NGAYTHANHTOAN > DONHANG.NgayGiao )
	DECLARE @MALOI NVARCHAR(100) = CONCAT(N'Ngày thanh toán không hợp lệ! MADH: ', @MADH)
	RAISERROR(@MALOI,16,1)
	ROLLBACK TRANSACTION 
	END
END;
  -- Tạo trigger, trạng thái đơn hàng chỉ được cập nhật  'đang giao' , 'đã giao', 'đã hủy', 'xử lý hoàn', 'đang hoàn', 'đã hoàn', chỉ khi trạng thái trong bảng chi tiết thanh toán 'thành công'
 
CREATE TRIGGER TRIG_DONHANG_TRANGTHAI_THANHCONG
ON CHITIET_THANHTOAN
AFTER INSERT, UPDATE 
AS 
BEGIN
		SET NOCOUNT ON;
  DECLARE @THANHTOAN TABLE (	
        MADH VARCHAR(10),
		MATHANHTOAN VARCHAR(10),
		TRANGTHAI NVARCHAR(30)	
    )
    INSERT INTO @THANHTOAN
    SELECT inserted.MaDH,inserted.MaThanhToan,DONHANG.TrangThai
    FROM inserted
	INNER JOIN DONHANG ON DONHANG.MaDH = inserted.MaDH
	IF EXISTS 
	(
	SELECT 1 FROM @THANHTOAN T INNER JOIN inserted ON inserted.MaDH = T.MADH AND inserted.MaThanhToan = T.MATHANHTOAN 
		WHERE (inserted.TrangThai_TT = N'Thành công' AND T.TRANGTHAI NOT IN (N'đang giao' , N'đã giao', N'đã hủy', N'xử lý hoàn', N'đang hoàn', N'đã hoàn')) 
		OR (inserted.TrangThai_TT= N'Xử lý' AND T.TRANGTHAI NOT IN ( N'chờ xử lý', N'đã xử lý'))
	)
	BEGIN
	DECLARE @MADH VARCHAR(10) = (SELECT TOP 1 T.MADH FROM @THANHTOAN T INNER JOIN inserted ON inserted.MaDH = T.MADH AND inserted.MaThanhToan = T.MATHANHTOAN 
		WHERE (inserted.TrangThai_TT = N'Thành công' AND T.TRANGTHAI NOT IN (N'đang giao' , N'đã giao', N'đã hủy', N'xử lý hoàn', N'đang hoàn', N'đã hoàn')) OR  (inserted.TrangThai_TT= N'Xử lý' AND T.TRANGTHAI NOT IN ( N'chờ xử lý', N'đã xử lý')))

		DECLARE @MALOI NVARCHAR(100) = CONCAT(N'Trạng thái đơn hàng chưa cập nhật đối với thanh toán! MADH : ',@MADH)
	RAISERROR(@MALOI, 16,1 )
	ROLLBACK TRANSACTION 
	END
 END;
 -- Tạo trigger, thống kê số lượng magiamgia_donhang trong bảng đơn hàng, số lượng mã tương ứng phải <= số lượng mã trong bảng giảm giá danh mục, trạng thái khác 0 
 CREATE TRIGGER TRIG_DONHANG_SLMAGIAM
 ON DONHANG
 FOR INSERT, UPDATE
 AS 
 BEGIN
		SET NOCOUNT ON;
	DECLARE @MAGIAMGIA TABLE (	
        MADH VARCHAR(10),
		MAGIAMGIA VARCHAR(10),
		TRANGTHAI TINYINT
		
    )
    INSERT INTO @MAGIAMGIA
    SELECT inserted.MaDH,inserted.MaGiamGia_DH,GIAMGIA_DONHANG.TrangThai
    FROM inserted
	INNER JOIN GIAMGIA_DONHANG ON GIAMGIA_DONHANG.MaGiamGia_DH = inserted.MaGiamGia_DH

		DECLARE @TONGMA TABLE 
		( MAGIAMGIA VARCHAR(10),
			TONGMA DECIMAL(16,2))
			INSERT INTO @TONGMA
			SELECT inserted.MaGiamGia_DH, COUNT(inserted.MaGiamGia_DH) 
			FROM inserted GROUP BY INSERTED.MaGiamGia_DH 

	IF UPDATE(MAGIAMGIA_DH)
	BEGIN
	IF EXISTS (
	SELECT 1 FROM DONHANG INNER JOIN @MAGIAMGIA M ON M.MADH = DONHANG.MaDH
	INNER JOIN GIAMGIA_DONHANG ON GIAMGIA_DONHANG.MaGiamGia_DH = M.MAGIAMGIA
	INNER JOIN @TONGMA T ON T.MAGIAMGIA = M.MAGIAMGIA 
	WHERE T.TONGMA > GIAMGIA_DONHANG.SoLuongMa )
	BEGIN
	RAISERROR('ĐÃ HẾT MÃ GIẢM GIÁ CHO SẢN PHẦM NÀY!',16,1)
	ROLLBACK TRANSACTION 
	END
	END
	IF UPDATE(MAGIAMGIA_DH)
	BEGIN
	IF EXISTS (
	SELECT 1 FROM DONHANG INNER JOIN @MAGIAMGIA M ON  M.MADH = DONHANG.MaDH
	WHERE M.TRANGTHAI = 0
	)
	BEGIN
	RAISERROR('MÃ GIẢM GIÁ KHÔNG HỢP LÊ !',16,1)
	ROLLBACK TRANSACTION 
	END
	END
 END;
 -- Tạo trigger, thống kê số lượng magiamgia_danhmuc trong bảng chi tiết đơn hàng, số lượng mã tương ứng phải <= số lượng mã trong bảng giảm giá danh mục

CREATE TRIGGER TRIG_CHITIET_DONHANG_SLMAGIAM
ON CHITIET_DONHANG
AFTER INSERT, UPDATE
AS 
BEGIN
		SET NOCOUNT ON;
	   DECLARE @MAGIAMGIA TABLE (	
        MADH VARCHAR(10),
		MASP VARCHAR(10),
		MAGIAMGIA VARCHAR(10),
		TRANGTHAI TINYINT
		
    )
    INSERT INTO @MAGIAMGIA
    SELECT inserted.MaDH,inserted.MaSP,inserted.MaGiamGia_DM,GIAMGIA_DANHMUC.TrangThai
    FROM inserted
	INNER JOIN GIAMGIA_DANHMUC ON GIAMGIA_DANHMUC.MaGiamGia_DM = inserted.MaGiamGia_DM

		DECLARE @TONGMA TABLE 
		( MAGIAMGIA VARCHAR(10),
			TONGMA DECIMAL(16,2))
			INSERT INTO @TONGMA
			SELECT inserted.MaGiamGia_DM, COUNT(inserted.MaGiamGia_DM) 
			FROM inserted GROUP BY INSERTED.MaGiamGia_DM 

	IF UPDATE(MAGIAMGIA_DM)
	BEGIN
	IF EXISTS (
	SELECT 1 FROM CHITIET_DONHANG INNER JOIN @MAGIAMGIA M ON M.MASP = CHITIET_DONHANG.MaSP AND M.MADH = CHITIET_DONHANG.MaDH
	INNER JOIN GIAMGIA_DANHMUC ON GIAMGIA_DANHMUC.MaGiamGia_DM = M.MAGIAMGIA
	INNER JOIN @TONGMA T ON T.MAGIAMGIA = M.MAGIAMGIA 
	WHERE T.TONGMA > GIAMGIA_DANHMUC.SoLuongMa )
	BEGIN
	RAISERROR('ĐÃ HẾT MÃ GIẢM GIÁ CHO SẢN PHẦM NÀY!',16,1)
	ROLLBACK TRANSACTION 
	END
	END
	IF UPDATE(SOLUONG)
	BEGIN
	IF EXISTS (
	SELECT 1 FROM CHITIET_DONHANG INNER JOIN @MAGIAMGIA M ON M.MASP = CHITIET_DONHANG.MaSP AND M.MADH = CHITIET_DONHANG.MaDH
	WHERE M.TRANGTHAI = 0
	)
	BEGIN
	RAISERROR('MÃ GIẢM GIÁ KHÔNG HỢP LÊ !',16,1)
	ROLLBACK TRANSACTION 
	END
	END
END;
-- Tạo trigger,trong bảng đơn hàng, nếu đơn hàng không ở trạng thái ('đã giao', 'đã hủy', 'xử lý hoàn', 'đang hoàn', 'đã hoàn') thì ngày giao phải là NULL 
CREATE TRIGGER TRIG_DONHANG_TRANGTHAI_NGAYGIAO
ON DONHANG
AFTER INSERT, UPDATE 
AS 
BEGIN
		SET NOCOUNT ON;
		   DECLARE @TRANGTHAI TABLE (	
        MADH VARCHAR(10),
		TRANGTHAI NVARCHAR(30))
		INSERT INTO @TRANGTHAI
		SELECT inserted.MaDH, inserted.TrangThai FROM inserted

		IF UPDATE (TRANGTHAI)
		BEGIN
		UPDATE DONHANG
		SET NGAYGIAO = NULL 
		FROM DONHANG 
		INNER JOIN @TRANGTHAI T ON T.MADH = DONHANG.MaDH 
		WHERE 
		DONHANG.MaDH = T.MaDH 
		AND T.TRANGTHAI NOT IN (N'đã giao', N'đã hủy', N'xử lý hoàn', N'đang hoàn', N'đã hoàn')
		PRINT 'NGAY GIAO HANG DA CAP NHAT'
		END
   
END;
-- Tạo trigger, kiểm tra giá trị đơn hàng đã đủ áp dụng mã giảm giá đơn hàng chưa

CREATE TRIGGER TRIG_DONHANG_GIAMGIADONHANG_TOITHIEU
ON DONHANG
AFTER UPDATE
AS BEGIN
		SET NOCOUNT ON;
		   DECLARE @TongDonGia TABLE (	
        MADH VARCHAR(10),
        TONGDONGIA DECIMAL(16, 2),
		NGAYDAT DATETIME
    )
    INSERT INTO @TongDonGia
    SELECT inserted.MaDH, inserted.TongDonGia, inserted.NgayDat
    FROM inserted
	IF UPDATE(TONGDONGIA)
	BEGIN
		IF EXISTS (
	SELECT 1 FROM inserted 
					INNER JOIN GIAMGIA_DONHANG ON GIAMGIA_DONHANG.MaGiamGia_DH = inserted.MaGiamGia_DH
					INNER JOIN @TongDonGia T ON T.MADH = inserted.MaDH
					WHERE  T.TONGDONGIA < GIAMGIA_DONHANG.GiaTri_ToiThieu
	
	)
	BEGIN
	RAISERROR(' KHÔNG ĐẠT GIÁ TRỊ ĐƠN HÀNG TỐI THIỂU',16,1)
	UPDATE DONHANG
	SET GiamGia_DonHang =0,MaGiamGia_DH =NULL
	FROM DONHANG 

					INNER JOIN GIAMGIA_DONHANG ON GIAMGIA_DONHANG.MaGiamGia_DH = DONHANG.MaGiamGia_DH
					INNER JOIN @TongDonGia T ON T.MADH = DONHANG.MaDH
					WHERE T.TONGDONGIA < GIAMGIA_DONHANG.GiaTri_ToiThieu

	END
	END;


END;
-- Tạo trigger,kiểm tra giá trị của giá trị đơn hàng đã đạt đơn hàng tối thiểu chưa
CREATE TRIGGER TRIG_CHITIET_DONHANG_KIEMTRATOITHIEU
ON CHITIET_DONHANG
AFTER INSERT, UPDATE
AS 
BEGIN
		SET NOCOUNT ON;
	DECLARE @CHITIET TABLE
	( MADH VARCHAR(10),
	MASP VARCHAR(10),
	DONGIA_CT DECIMAL(16,2),
	MAGIAMGIA VARCHAR(10)
	) 

	DECLARE @GIAMGIA TABLE 
	(MAGIAMGIA VARCHAR(10),
	GIATRITOITHIEU DECIMAL(16,2)
	)
	INSERT INTO @CHITIET
	SELECT inserted.MaDH, inserted.MaSP,inserted.SoLuong*SANPHAM.GiaSP, inserted.MaGiamGia_DM FROM inserted INNER JOIN SANPHAM ON SANPHAM.MaSP = inserted.MaSP
	INSERT INTO @GIAMGIA
	SELECT inserted.MaGiamGia_DM, GIAMGIA_DANHMUC.GiaTri_ToiThieu FROM inserted INNER JOIN GIAMGIA_DANHMUC ON GIAMGIA_DANHMUC.MaGiamGia_DM = inserted.MaGiamGia_DM
	IF EXISTS (
		SELECT 1 FROM inserted INNER JOIN @CHITIET C ON C.MADH = inserted.MaDH AND C.MASP = inserted.MaSP
								INNER JOIN @GIAMGIA G ON G.MAGIAMGIA = C.MAGIAMGIA 
								WHERE C.DONGIA_CT < G.GIATRITOITHIEU
	)
	BEGIN
	RAISERROR('Giá trị chưa đạt tối thiểu!',16,1)
	UPDATE CHITIET_DONHANG
	SET LuongGiam =0,MaGiamGia_DM = NULL
	FROM CHITIET_DONHANG 
	INNER JOIN @CHITIET C ON C.MADH = CHITIET_DONHANG.MaDH AND C.MASP =CHITIET_DONHANG.MaSP
								INNER JOIN GIAMGIA_DANHMUC ON GIAMGIA_DANHMUC.MaGiamGia_DM = C.MAGIAMGIA
								WHERE C.DONGIA_CT < GIAMGIA_DANHMUC.GiaTri_ToiThieu
		
	END
	
END;
-----Kiểm tra địa chỉ nhận 

CREATE TRIGGER TRIG_DONHANG_KIEMTRADIACHINHAN
ON DONHANG
AFTER INSERT, UPDATE 
AS
BEGIN
		SET NOCOUNT ON;
	DECLARE @TAMP TABLE (MAKH VARCHAR(10),MADIACHI VARCHAR(10))
	INSERT INTO @TAMP SELECT MaKH, MaDiaChi FROM DIACHINHAN
	UPDATE DONHANG
	SET MaDiaChi = (SELECT TOP 1 T.MADIACHI FROM inserted INNER JOIN @TAMP T ON T.MAKH = inserted.MaKH)
	FROM DONHANG T INNER JOIN @TAMP D ON T.MAKH = D.MaKH
	INNER JOIN inserted ON inserted.MaDH = T.MaDH 
	WHERE inserted.MADIACHI IS NULL AND inserted.MaDH = T.MaDH

	UPDATE DONHANG 
 SET PhiVanChuyen = ( CASE 
	WHEN DIACHINHAN.ThanhPho IN (N'Hà Nội',N'Hồ Chí Minh') THEN (15000)
	WHEN DIACHINHAN.ThanhPho NOT IN (N'Hà Nội',N'Hồ Chí Minh') THEN (30000)
	END
 )
 FROM DONHANG INNER JOIN inserted ON inserted.MaDH = DONHANG.MaDH 
 INNER JOIN DIACHINHAN ON DIACHINHAN.MaDiaChi = DONHANG.MaDiaChi
 END
	
--Tạo trigger, khi thay đổi dữ liệu trong bảng chi tiết đơn hàng, luonggiam có hai trường hợp : nếu magiamgia_dm có loaigiatri là GIATRI thi luogngiam = giatri mã giảm* số lượng
-- Nếu magiamgia_dm có loaigiatri là PHANTRAM thì luonggiam = GiaSP*Soluong*Giatri mã giảm,  luonggiam= giamtoida nếu lượng giảm lớn hơn giảm tối đa trong bảng giảm giá danh mục
--lượng giảm = giaSP*soluong nếu giá trị voucher >= giaSP*soluong
CREATE TRIGGER TRIG_CHITIET_DONHANG_LUONGGIAMGIATRI
ON CHITIET_DONHANG
AFTER INSERT, UPDATE 
AS 
BEGIN
		SET NOCOUNT ON;
DECLARE @CHITIET TABLE
	( MADH VARCHAR(10),
	MASP VARCHAR(10),
	MADM VARCHAR(10)
	) 
	INSERT INTO @CHITIET
	SELECT inserted.MaDH, inserted.MaSP,inserted.MaGiamGia_DM FROM inserted INNER JOIN SANPHAM ON SANPHAM.MaSP = inserted.MaSP
   

    IF EXISTS (
              SELECT 1
        FROM @CHITIET  G
        INNER JOIN DANHMUC_GIAM D ON G.MADM = D.MaGiamGia_DM
		INNER JOIN inserted ON inserted.MaSP = G.MASP AND inserted.MaDH = G.MADH
		INNER JOIN SANPHAM ON SANPHAM.MaSP = inserted.MaSP 
		WHERE D.MaDanhMuc != SANPHAM.MaDanhMuc 
    )
    BEGIN
	DECLARE @MADH VARCHAR(10)
	SELECT TOP 1 @MADH =G.MADH  FROM @CHITIET  G
        INNER JOIN DANHMUC_GIAM D ON G.MADM = D.MaGiamGia_DM
		INNER JOIN inserted ON inserted.MaSP = G.MASP AND inserted.MaDH = G.MADH
		INNER JOIN SANPHAM ON SANPHAM.MaSP = inserted.MaSP 
		WHERE D.MaDanhMuc != SANPHAM.MaDanhMuc 
	DECLARE @MALOI NVARCHAR(255) = CONCAT(N'Sản phẩm không thuộc danh mục giảm giá MADH: ',@MADH)
        RAISERROR(@MALOI, 16, 1)
		
       END

	DECLARE @GIAMGIA_DANHMUC TABLE
	( MADH VARCHAR(10),
	 LUONGGIAM DECIMAL(16,2),
	 MASP VARCHAR(10),
	MAGIAMGIA_DM VARCHAR(10)
	)
	DECLARE @DONGIA TABLE 
	( MADH VARCHAR(10),
		MASP VARCHAR(10),
		DONGIA_CT DECIMAL(16,2)
	
	)
	INSERT INTO @DONGIA
	SELECT inserted.MADH, inserted.MaSP, inserted.SoLuong*SANPHAM.GiaSP
	FROM inserted 
	INNER JOIN SANPHAM ON SANPHAM.MaSP = inserted.MaSP 
	-- update luonggiam theo loại giá trị mã giảm giá
	INSERT INTO @GIAMGIA_DANHMUC
	SELECT INSERTED.MADH,
    LUONGGIAM = (
        CASE 
            WHEN GIAMGIA_DANHMUC.LoaiGiaTri = 'GIATRI' THEN (GIAMGIA_DANHMUC.GiaTri * inserted.SoLuong)
            WHEN GIAMGIA_DANHMUC.LoaiGiaTri = 'PHANTRAM' THEN (GIAMGIA_DANHMUC.GiaTri * D.DONGIA_CT/100)
            WHEN inserted.MaGiamGia_DM IS NULL THEN 0
			ELSE 0
        END
    ), inserted.MaSP,inserted.MaGiamGia_DM
    FROM 
        inserted 
    INNER JOIN SANPHAM ON SANPHAM.MaSP = inserted.MaSP
    LEFT JOIN GIAMGIA_DANHMUC ON GIAMGIA_DANHMUC.MaGiamGia_DM =inserted.MaGiamGia_DM
	INNER JOIN @DONGIA D ON D.MADH = inserted.MaDH AND D.MASP = inserted.MaSP

		-- Cập nhật luonggiam= giamtoida nếu lượng giảm lớn hơn giảm tối đa trong bảng giảm giá danh mục
    UPDATE G
    SET LUONGGIAM = GIAMGIA_DANHMUC.GiamToiDa
    FROM 
        @GIAMGIA_DANHMUC G 
		INNER JOIN inserted ON inserted.MaDH = G.MADH AND inserted.MaSP = G.MASP
    INNER JOIN GIAMGIA_DANHMUC ON GIAMGIA_DANHMUC.MaGiamGia_DM = G.MAGIAMGIA_DM
    WHERE  G.LUONGGIAM > GIAMGIA_DANHMUC.GiamToiDa

	  UPDATE G
		SET LUONGGIAM = 0,
		MAGIAMGIA_DM = NULL
	FROM  @GIAMGIA_DANHMUC G INNER JOIN inserted ON inserted.MaDH = G.MADH AND G.MASP = inserted.MaSP
		INNER JOIN DANHMUC_GIAM D ON G.MAGIAMGIA_DM = D.MaGiamGia_DM
		INNER JOIN SANPHAM ON SANPHAM.MaSP = G.MaSP 
		WHERE D.MaDanhMuc != SANPHAM.MaDanhMuc AND D.MaGiamGia_DM = G.MAGIAMGIA_DM
	
		---Cập nhật lượng giảm = giaSP*soluong nếu giá trị voucher >= giaSP*soluong
		UPDATE G
		SET LuongGiam= D.DONGIA_CT
		FROM @GIAMGIA_DANHMUC G
		INNER JOIN GIAMGIA_DANHMUC ON GIAMGIA_DANHMUC.MaGiamGia_DM = G.MAGIAMGIA_DM
		INNER JOIN @DONGIA D ON D.MADH= G.MADH
		INNER JOIN inserted ON inserted.MaDH = G.MADH AND inserted.MaSP = G.MASP
		WHERE  GIAMGIA_DANHMUC.GiaTri> D.DONGIA_CT
		

		UPDATE CHITIET_DONHANG 
		SET LuongGiam = G.LUONGGIAM,
			MaGiamGia_DM = G.MAGIAMGIA_DM
		FROM CHITIET_DONHANG 
		INNER JOIN inserted ON inserted.MADH = CHITIET_DONHANG.MaDH AND inserted.MaSP = CHITIET_DONHANG.MaSP
		INNER JOIN @GIAMGIA_DANHMUC G ON G.MADH = CHITIET_DONHANG.MaDH AND G.MASP = CHITIET_DONHANG.MaSP

		UPDATE CHITIET_DONHANG
		SET DonGia =D.DONGIA_CT - G.LUONGGIAM
		FROM CHITIET_DONHANG
		INNER JOIN inserted ON inserted.MaDH = CHITIET_DONHANG.MaDH AND CHITIET_DONHANG.MASP = inserted.MaSP
		INNER JOIN @GIAMGIA_DANHMUC G ON G.MADH = CHITIET_DONHANG.MaDH AND CHITIET_DONHANG.MaSP= G.MASP
		INNER JOIN @DONGIA D ON D.MADH = CHITIET_DONHANG.MaDH AND D.MASP = CHITIET_DONHANG.MaSP 

		UPDATE DONHANG
	SET TONGDONGIA = (
		SELECT SUM(D.DONGIA_CT - G.LUONGGIAM)
		FROM @GIAMGIA_DANHMUC G
		INNER JOIN @DONGIA D ON G.MADH = D.MADH AND G.MASP = D.MASP
		WHERE G.MADH = DONHANG.MaDH AND D.MADH = DONHANG.MaDH  
	),
	TGCapNhat = GETDATE()
	FROM DONHANG
	INNER JOIN inserted ON inserted.MaDH = DONHANG.MaDH
	
	DECLARE @TongDonGia TABLE (	
        MADH VARCHAR(10),
        TONGDONGIA DECIMAL(16, 2)
    )
    INSERT INTO @TongDonGia
    SELECT DONHANG.MaDH, DONHANG.TongDonGia
    FROM DONHANG 
    
    DECLARE @GiamGia_DonHang TABLE (
        MADH VARCHAR(10),
        GIAMGIA_DONHANG DECIMAL(16, 2),
		MAGIAMGIA_DH VARCHAR(10)

    )
    INSERT INTO @GiamGia_DonHang
    SELECT DONHANG.MaDH, GIAMGIA_DONHANG = (
        CASE 
            WHEN GIAMGIA_DONHANG.LoaiGiaTri = 'PHANTRAM' THEN (T.TONGDONGIA * GIAMGIA_DONHANG.GiaTri / 100)
            WHEN GIAMGIA_DONHANG.LoaiGiaTri = 'GIATRI' THEN (GIAMGIA_DONHANG.GiaTri)
            ELSE 0 
        END
		), DONHANG.MaGiamGia_DH
    FROM DONHANG
	INNER JOIN inserted ON inserted.MADH = DONHANG.MaDH
	 LEFT JOIN GIAMGIA_DONHANG ON GIAMGIA_DONHANG.MAGIAMGIA_DH = DONHANG.MAGIAMGIA_DH
	 INNER JOIN @TongDonGia T ON T.MADH = DONHANG.MaDH 
    
    UPDATE G
    SET GIAMGIA_DONHANG = GIAMGIA_DONHANG.GiamToiDa
    FROM @GiamGia_DonHang G
    INNER JOIN DONHANG ON DONHANG.MaDH = G.MADH 
    INNER JOIN GIAMGIA_DONHANG ON GIAMGIA_DONHANG.MaGiamGia_DH = G.MAGIAMGIA_DH
    WHERE G.GiamGia_DonHang > GIAMGIA_DONHANG.GiamToiDa 
    
    UPDATE G
    SET GIAMGIA_DONHANG = T.TongDonGia 
    FROM @GiamGia_DonHang G
    INNER JOIN DONHANG ON DONHANG.MaDH = G.MADH
    INNER JOIN GIAMGIA_DONHANG ON GIAMGIA_DONHANG.MaGiamGia_DH = DONHANG.MAGIAMGIA_DH
	INNER JOIN @TongDonGia  T ON DONHANG.MaDH = T.MADH
    WHERE GIAMGIA_DONHANG.GiaTri > T.TongDonGia 
	 
    UPDATE DONHANG
    SET GiamGia_DonHang = G.GIAMGIA_DONHANG
    FROM DONHANG
	INNER JOIN @GiamGia_DonHang G ON G.MADH = DONHANG.MaDH

    UPDATE DONHANG
    SET ThanhTien = T.TongDonGia + DONHANG.PhiVanChuyen - G.GIAMGIA_DONHANG 
    FROM DONHANG
    INNER JOIN @TongDonGia T ON T.MADH = DONHANG.MaDH
	INNER JOIN @GiamGia_DonHang G ON G.MADH = DONHANG.MaDH
END;